plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
}

allprojects { project ->
	apply plugin: 'fabric-loom'
	apply plugin: 'maven-publish'
	apply plugin: 'java-library'

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group

	repositories {
		maven { url "https://jitpack.io" }
		maven { url "https://hephaestus.dev/release" }
		maven { url "http://maven.fabricmc.net/" }
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

		// LibBulletJME
		implementation "com.github.stephengold:Libbulletjme:${project.libbulletjme_version}"
	}

	sourceSets {
		testmod {
			compileClasspath += main.compileClasspath
			runtimeClasspath += main.runtimeClasspath
		}
	}

	processResources {
		inputs.property "version", project.version

		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand "version": project.version
		}

		from(sourceSets.main.resources.srcDirs) {
			exclude "fabric.mod.json"
		}
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	jar {
		from "LICENSE"
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifact(remapJar) {
					builtBy remapJar
				}
				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}

		repositories {
			mavenLocal()
		}
	}

	dependencies {
		testmodCompile project.sourceSets.main.output
	}
}

dependencies {
	include project(":rayon-core")
	include project(":rayon-entity")
	include project(":rayon-particle")
}

task publish(overwrite: true) {
	subprojects {
		publish
	}
}

task publishToMavenLocal(overwrite: true) {
	subprojects {
		publishToMavenLocal
	}
}